function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.smsSuccessEvent=function(){var t=this;t.smsCaptcha.addClass("disabled");var n=10;t.smsCaptcha.unbind("click");var e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.removeClass("disabled"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".signin-btn"),e=$(".signup-btn"),s=$(".close-btn");n.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),e.click(function(){t.showEvent(),t.scrollWrapper.css({left:-400})}),s.click(function(){t.hideEvent(),$(".form-control").val("")})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,t=$(".sms-captcha-btn"),e=$(".signup-group input[name='telephone']"),s=/^[1][3,4,5,7,8,9][0-9]{9}$/;t.click(function(){var t=e.val();s.test(t)?(messageBox.showInfo("短信验证码发送成功！"),blogajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200===t.code&&n.smsSuccessEvent()},fail:function(t){console.log(t)}})):messageBox.showError("请输入正确的手机号码！")})},Auth.prototype.listenSigninEvent=function(){var t=$(".signin-group"),s=t.find("input[name='telephone']"),o=t.find("input[name='password']"),a=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=s.val(),n=o.val(),e=a.prop("checked");!t&&n&&messageBox.showError("请输入手机号码！"),!n&&t&&messageBox.showError("请输入密码！"),t&&n&&blogajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){console.log(t),200===t.code&&(console.log(t),messageBox.showInfo("登录成功"),setTimeout(function(){window.location.reload()},500))}})})},Auth.prototype.listenSignupEvent=function(){var m=$(".signup-group");m.find(".submit-btn").click(function(t){t.preventDefault();var n=m.find("input[name='telephone']"),e=m.find("input[name='username']"),s=m.find("input[name='img_captcha']"),o=m.find("input[name='password1']"),a=m.find("input[name='password2']"),i=m.find("input[name='sms_captcha']"),c=n.val(),r=e.val(),p=s.val(),u=o.val(),l=a.val(),h=i.val();blogajax.post({url:"/account/register/",data:{telephone:c,username:r,img_captcha:p,password1:u,password2:l,sms_captcha:h},success:function(t){200===t.code&&(console.log(t),messageBox.showInfo("注册成功"),setTimeout(function(){window.location.reload()},500))}})})},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(template.defaults.imports.timeNormal=function(t){return date=t.substring(0,10),console.log(t),date.substring(0,5)+date.substring(5,8)+date.substring(8,10)})}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),s=((new Date).getTime()-e)/1e3;return s<60?"刚刚":60<=s&&s<3600?(minutes=parseInt(s/60),minutes+"分钟前"):3600<=s&&s<86400?(hours=parseInt(s/60/60),hours+"小时前"):86400<=s&&s<2592e3?(days=parseInt(s/60/60/24),days+"天前"):n.getFullYear()+"-"+n.getMonth()+"-"+n.getDay()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
